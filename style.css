@import url("https://fonts.googleapis.com/css?family=Encode+Sans:400,700|Inter:400,700,900");
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article, aside, details, figcaption, figure,
footer, header, hgroup, main, nav, section, summary {
  display: block; }

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

a {
  background: transparent; }

a:active, a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button, input, optgroup, select, textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button, select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], html input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"], input[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

.free {
  width: auto; }

.free,
.confined {
  padding: 6rem 0; }

.free > .confined {
  padding: 0 0; }

.confined {
  max-width: 1200px; }

.confined > section:only-child {
  margin: 0 11px;
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1; }

.flexy {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap; }

.flexy > section {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: 0 11px 22px;
  padding: 12px 19.2px 16.8px;
  background-color: #34315E;
  border-radius: 4px; }

.flexy > section.nopadding {
  padding: 0; }

.flexy img {
  max-width: 100%;
  margin: 0;
  padding: 0;
  display: block; }

.align-center, .confined {
  margin-left: auto;
  margin-right: auto; }

.bg-black {
  background: #241D31; }

.bg-blue {
  background: #3784F6; }

.breakpoint {
  position: fixed;
  bottom: 1rem;
  left: 1rem; }

.breakpoint:after {
  display: block;
  padding: .4rem .8rem;
  font-size: 1rem;
  text-align: center;
  color: #FAF8F8;
  border-radius: 4px;
  content: 'Extra Small';
  background-color: rgba(246, 55, 55, 0.6); }

@media (min-width: 768px) {
  .breakpoint:after {
    content: 'Small';
    background-color: rgba(255, 170, 17, 0.6); } }

@media (min-width: 992px) {
  .breakpoint:after {
    content: 'Medium';
    background-color: rgba(55, 132, 246, 0.6); } }

@media (min-width: 1200px) {
  .breakpoint:after {
    content: 'Large';
    background-color: rgba(6, 211, 200, 0.6); } }

html {
  font-size: 62.5%; }

body {
  font-weight: 400;
  font-family: "Inter", sans-serif;
  background: #241D31;
  color: #FAF8F8;
  font-size: 1.2rem;
  line-height: 1.68rem; }

h1,
h2,
h3,
h4,
h5 {
  font-weight: normal;
  margin: 4rem 0 1.4rem;
  padding: 0;
  font-family: "Inter", sans-serif;
  font-weight: 700;
  color: #06D3C8; }

h1 {
  font-size: 5.05047rem;
  line-height: 6.06057rem; }

h2 {
  font-size: 3.7888rem;
  line-height: 5.05047rem; }

h3 {
  font-size: 2.84231rem;
  line-height: 4.04038rem; }

h4 {
  font-size: 2.13227rem;
  line-height: 3.03028rem; }

h5 {
  font-size: 1.5996rem;
  line-height: 2.02019rem; }

h1:first-child,
h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child {
  margin-top: 0;
  padding-top: 0; }

p {
  margin: 0 0 1rem; }

p.headline {
  font-size: .86rem; }

* p:only-child,
* p:last-child {
  margin-bottom: 0; }

a {
  text-decoration: none;
  -webkit-transition: .2s;
  transition: .2s;
  color: #ffaa11; }

a:active, a:visited {
  text-decoration: none; }

a:hover {
  text-decoration: none;
  color: #c47e00;
  text-decoration: underline; }

.header {
  height: 30vh;
  background: #00b09b;
  background: -webkit-gradient(linear, right top, left top, from(#cb2d3e), to(#ef473a));
  background: linear-gradient(to left, #cb2d3e, #ef473a);
  text-align: center;
  font-size: 4rem;
  padding-top: 5rem;
  letter-spacing: .8rem; }

.jumbotron h1 {
  color: white; }

.navbar-brand {
  font-size: 1.6rem; }

.bg-black {
  background: #241D31; }

.bg-blue {
  background: #3784F6; }

.f-stack {
  display: block; }

@media (min-width: 768px) {
  .f-stack {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .f-stack > section {
    -webkit-box-flex: 1;
    -ms-flex: 1 200px;
    flex: 1 200px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
